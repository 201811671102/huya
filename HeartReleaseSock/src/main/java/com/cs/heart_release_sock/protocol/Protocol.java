// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PacketMode.proto

package com.cs.heart_release_sock.protocol;

/**
 * Protobuf enum {@code mode.Protocol}
 */
public enum Protocol
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <code>Protocol_Default = 0;</code>
   */
  Protocol_Default(0),
  /**
   * <pre>
   *心跳包
   * </pre>
   *
   * <code>Heartbeat = 1000;</code>
   */
  Heartbeat(1000),
  /**
   * <pre>
   *用户不在线
   * </pre>
   *
   * <code>User_No_Online = 2000;</code>
   */
  User_No_Online(2000),
  /**
   * <pre>
   *位置
   * </pre>
   *
   * <code>User_Position = 3000;</code>
   */
  User_Position(3000),
  /**
   * <pre>
   *点赞
   * </pre>
   *
   * <code>User_Thumb_Up = 4000;</code>
   */
  User_Thumb_Up(4000),
  /**
   * <pre>
   *评论
   * </pre>
   *
   * <code>User_Comment = 5000;</code>
   */
  User_Comment(5000),
  /**
   * <pre>
   *咨询
   * </pre>
   *
   * <code>User_Consulting = 6000;</code>
   */
  User_Consulting(6000),
  /**
   * <pre>
   *交流
   * </pre>
   *
   * <code>User_Communication = 7000;</code>
   */
  User_Communication(7000),
  /**
   * <pre>
   *交流时发送图片
   * </pre>
   *
   * <code>User_Communication_photo = 8000;</code>
   */
  User_Communication_photo(8000),
  /**
   * <pre>
   *语音聊天
   * </pre>
   *
   * <code>User_Call = 9000;</code>
   */
  User_Call(9000),
  /**
   * <pre>
   *访客
   * </pre>
   *
   * <code>User_Access = 10000;</code>
   */
  User_Access(10000),
  /**
   * <pre>
   *收藏
   * </pre>
   *
   * <code>User_Collection = 11000;</code>
   */
  User_Collection(11000),
  /**
   * <pre>
   *医师回复咨询请求
   * </pre>
   *
   * <code>User_Consulting_Consult = 12000;</code>
   */
  User_Consulting_Consult(12000),
  UNRECOGNIZED(-1),
  ;

  /**
   * <code>Protocol_Default = 0;</code>
   */
  public static final int Protocol_Default_VALUE = 0;
  /**
   * <pre>
   *心跳包
   * </pre>
   *
   * <code>Heartbeat = 1000;</code>
   */
  public static final int Heartbeat_VALUE = 1000;
  /**
   * <pre>
   *用户不在线
   * </pre>
   *
   * <code>User_No_Online = 2000;</code>
   */
  public static final int User_No_Online_VALUE = 2000;
  /**
   * <pre>
   *位置
   * </pre>
   *
   * <code>User_Position = 3000;</code>
   */
  public static final int User_Position_VALUE = 3000;
  /**
   * <pre>
   *点赞
   * </pre>
   *
   * <code>User_Thumb_Up = 4000;</code>
   */
  public static final int User_Thumb_Up_VALUE = 4000;
  /**
   * <pre>
   *评论
   * </pre>
   *
   * <code>User_Comment = 5000;</code>
   */
  public static final int User_Comment_VALUE = 5000;
  /**
   * <pre>
   *咨询
   * </pre>
   *
   * <code>User_Consulting = 6000;</code>
   */
  public static final int User_Consulting_VALUE = 6000;
  /**
   * <pre>
   *交流
   * </pre>
   *
   * <code>User_Communication = 7000;</code>
   */
  public static final int User_Communication_VALUE = 7000;
  /**
   * <pre>
   *交流时发送图片
   * </pre>
   *
   * <code>User_Communication_photo = 8000;</code>
   */
  public static final int User_Communication_photo_VALUE = 8000;
  /**
   * <pre>
   *语音聊天
   * </pre>
   *
   * <code>User_Call = 9000;</code>
   */
  public static final int User_Call_VALUE = 9000;
  /**
   * <pre>
   *访客
   * </pre>
   *
   * <code>User_Access = 10000;</code>
   */
  public static final int User_Access_VALUE = 10000;
  /**
   * <pre>
   *收藏
   * </pre>
   *
   * <code>User_Collection = 11000;</code>
   */
  public static final int User_Collection_VALUE = 11000;
  /**
   * <pre>
   *医师回复咨询请求
   * </pre>
   *
   * <code>User_Consulting_Consult = 12000;</code>
   */
  public static final int User_Consulting_Consult_VALUE = 12000;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Protocol valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Protocol forNumber(int value) {
    switch (value) {
      case 0: return Protocol_Default;
      case 1000: return Heartbeat;
      case 2000: return User_No_Online;
      case 3000: return User_Position;
      case 4000: return User_Thumb_Up;
      case 5000: return User_Comment;
      case 6000: return User_Consulting;
      case 7000: return User_Communication;
      case 8000: return User_Communication_photo;
      case 9000: return User_Call;
      case 10000: return User_Access;
      case 11000: return User_Collection;
      case 12000: return User_Consulting_Consult;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Protocol>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Protocol> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Protocol>() {
          public Protocol findValueByNumber(int number) {
            return Protocol.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.cs.heart_release_sock.protocol.PacketMode.getDescriptor().getEnumTypes().get(0);
  }

  private static final Protocol[] VALUES = values();

  public static Protocol valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Protocol(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:mode.Protocol)
}

